.App {
    min-height: 100vh;
    background: linear-gradient(135deg, #0a0a1a 0%, #1a0b2e 100%);
    color: #fff;
    position: relative;
    overflow: hidden;
}

.scene {
    perspective: 2000px;
    perspective-origin: 50% 50%;
    height: 100vh;
    overflow-y: auto;
    padding: 2rem;
}

.scene::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        linear-gradient(90deg, transparent 0%, rgba(255, 0, 85, 0.1) 50%, transparent 100%),
        repeating-linear-gradient(transparent 0%, transparent 49%, rgba(0, 255, 255, 0.1) 50%, transparent 51%, transparent 100%);
    background-size: 200% 100%, 100% 4px;
    pointer-events: none;
    animation: scanlines 4s linear infinite;
}

@keyframes scanlines {
    0% { background-position: 200% 0, 0 0; }
    100% { background-position: -200% 0, 0 100%; }
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
    transform-style: preserve-3d;
    z-index: 1;
}

.App-header {
    text-align: center;
    margin-bottom: 4rem;
    animation: glitch 1s ease-out;
    transform-style: preserve-3d;
}

h1 {
    font-size: 4rem;
    margin-bottom: 0.5rem;
    color: #ff2d55;
    text-shadow: 
        2px 2px #0ff,
        -2px -2px #f0f;
    position: relative;
    transform: translateZ(30px);
}

h1::before, h1::after {
    content: 'Fake News Detection';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    clip: rect(0, 900px, 0, 0);
    animation: glitch-anim 2s infinite linear alternate-reverse;
}

h1::before {
    text-shadow: -2px 0 #0ff;
    animation-delay: -1s;
}

h1::after {
    text-shadow: 2px 0 #f0f;
    animation-delay: -2s;
}

@keyframes glitch-anim {
    0% { clip: rect(64px, 9999px, 66px, 0); }
    5% { clip: rect(30px, 9999px, 36px, 0); }
    10% { clip: rect(87px, 9999px, 95px, 0); }
    15% { clip: rect(56px, 9999px, 59px, 0); }
    20% { clip: rect(79px, 9999px, 83px, 0); }
    25% { clip: rect(45px, 9999px, 48px, 0); }
    100% { clip: rect(54px, 9999px, 57px, 0); }
}

.subtitle {
    color: #0ff;
    font-size: 1.3rem;
    text-transform: uppercase;
    letter-spacing: 3px;
    transform: translateZ(20px);
    text-shadow: 0 0 10px #0ff;
}

.main-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    transform-style: preserve-3d;
}

.input-section, .result-section {
    width: 100%;
    max-width: 600px;
    padding: 2.5rem;
    background: rgba(10, 10, 26, 0.8);
    border: 1px solid #0ff;
    border-radius: 5px;
    backdrop-filter: blur(20px);
    box-shadow: 
        0 0 20px rgba(0, 255, 255, 0.2),
        inset 0 0 20px rgba(0, 255, 255, 0.1);
    transform-style: preserve-3d;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.input-section::before, .result-section::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        45deg,
        transparent 0%,
        rgba(0, 255, 255, 0.1) 50%,
        transparent 100%
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
}

@keyframes shine {
    0% { transform: translateX(-100%) rotate(45deg); }
    100% { transform: translateX(100%) rotate(45deg); }
}

label {
    color: #ff2d55;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 2px;
    margin-bottom: 0.5rem;
    display: block;
    text-shadow: 0 0 5px #ff2d55;
}

input {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid #0ff;
    color: #fff;
    padding: 1rem;
    font-size: 1rem;
    border-radius: 5px;
    transition: all 0.3s ease;
}

input:focus {
    outline: none;
    border-color: #ff2d55;
    box-shadow: 0 0 15px rgba(255, 45, 85, 0.5);
}

input.error {
    border-color: #ff4444;
    animation: shake 0.5s ease-in-out;
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    75% { transform: translateX(10px); }
}

.error-message {
    color: #ff4444;
    font-size: 0.9rem;
    margin-top: -0.5rem;
    animation: fadeIn 0.3s ease-out;
}

.button-group {
    margin-top: 2rem;
    display: flex;
    gap: 1rem;
}

.primary-button, .secondary-button {
    padding: 1rem 2rem;
    font-size: 1rem;
    text-transform: uppercase;
    letter-spacing: 2px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.primary-button {
    background: #ff2d55;
    color: #fff;
    box-shadow: 0 0 15px rgba(255, 45, 85, 0.5);
}

.secondary-button {
    background: transparent;
    border: 1px solid #0ff;
    color: #0ff;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
}

.primary-button:hover, .secondary-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 0 30px rgba(255, 45, 85, 0.8);
}

.primary-button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
}

.loading-spinner {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.spinner {
    width: 20px;
    height: 20px;
    border: 2px solid #0ff;
    border-top-color: #ff2d55;
    border-radius: 50%;
    animation: cyber-spin 1s linear infinite;
}

@keyframes cyber-spin {
    to { transform: rotate(360deg); }
}

.result-section {
    text-align: center;
    padding: 2rem;
}

.result-text {
    font-size: 4rem;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 4px;
}

.result-text.fake {
    color: #ff2d55;
    text-shadow: 0 0 20px rgba(255, 45, 85, 0.8);
}

.result-text.real {
    color: #0ff;
    text-shadow: 0 0 20px rgba(0, 255, 255, 0.8);
}

/* Add floating animation */
@keyframes float {
    0% { transform: translateZ(0) translateY(0); }
    50% { transform: translateZ(20px) translateY(-10px); }
    100% { transform: translateZ(0) translateY(0); }
}

.parallax > * {
    animation: float 6s ease-in-out infinite;
}

/* Enhanced hover effects */
.input-section:hover, .result-section:hover {
    transform: translateZ(50px);
    box-shadow: 
        0 15px 35px rgba(0, 0, 0, 0.3),
        inset 0 0 0 1px rgba(255, 255, 255, 0.2);
}

/* Add depth to background */
.particles-background {
    transform-style: preserve-3d;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: radial-gradient(circle at 50% 50%, rgba(97, 218, 251, 0.1) 0%, transparent 25%);
    animation: 
        pulse 4s ease-in-out infinite,
        float 8s ease-in-out infinite;
    pointer-events: none;
}

@keyframes pulse {
    0% { transform: scale(1); opacity: 0.5; }
    50% { transform: scale(1.5); opacity: 0.2; }
    100% { transform: scale(1); opacity: 0.5; }
}

/* Mobile adjustments */
@media (max-width: 768px) {
    .scene {
        padding: 1rem;
    }
    
    h1 {
        font-size: 2.5rem;
    }
    
    .input-section, .result-section {
        padding: 1.5rem;
    }
    
    .parallax, 
    .parallax > *,
    .input-section,
    .result-section,
    input,
    button {
        transform: none !important;
        animation: none !important;
    }
    
    .container {
        perspective: none;
    }
    
    .input-section:hover, .result-section:hover {
        transform: none;
    }
}